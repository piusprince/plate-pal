// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Restaurant {
  id        Int      @id @default(autoincrement())
  name      String
  address   String
  owner String
  category  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  menus     Menu[]
}

model Menu {
  id        Int      @id @default(autoincrement())
  name      String
  price     Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  restaurant Restaurant @relation(fields: [restaurantId], references: [id])
  restaurantId Int
  orders     Order[]
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  name      String?
  password  String
  role     String[]   @default(["USER"])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  orders    Order[]
}

model Order {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  menu      Menu     @relation(fields: [menuId], references: [id])
  menuId    Int
  @@unique([userId, menuId])
}


// model Cart {
//   id        Int      @id @default(autoincrement())
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt
//   user      User     @relation(fields: [userId], references: [id])
//   userId    Int
//   menu      Menu     @relation(fields: [menuId], references: [id])
//   menuId    Int
// }

// model OrderItem {
//   id        Int      @id @default(autoincrement())
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt
//   order     Order    @relation(fields: [orderId], references: [id])
//   orderId   Int
//   menu      Menu     @relation(fields: [menuId], references: [id])
//   menuId    Int
// }
